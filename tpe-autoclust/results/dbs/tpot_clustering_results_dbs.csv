Dataset,Best_Pipeline,silhouette_score,davies_bouldin_score,calinski_harabasz_score,adjusted_rand_score,Running_Time(s)
iono.csv,"{'minmaxscaler': MinMaxScaler(), 'spectralclustering': SpectralClustering(eigen_solver='lobpcg', n_clusters=19, random_state=42)}",0.18439971733083407,1.7376748303569614,9.000687312653488,0.20495651077776378,1831.58
cluto-t7-10k.csv,"{'featureunion': FeatureUnion(transformer_list=[('functiontransformer-1',
                                FunctionTransformer(func=<function copy at 0x7f921a132b90>)),
                               ('functiontransformer-2',
                                FunctionTransformer(func=<function copy at 0x7f921a132b90>))]), 'kmeans': KMeans(n_clusters=4, random_state=42)}",0.4613267454558517,0.715907383726589,12091.57238370599,0.40667478850227484,1853.96
glass.csv,"{'featureunion': FeatureUnion(transformer_list=[('functiontransformer-1',
                                FunctionTransformer(func=<function copy at 0x7f921a132b90>)),
                               ('functiontransformer-2',
                                FunctionTransformer(func=<function copy at 0x7f921a132b90>))]), 'stackingestimator': StackingEstimator(estimator=KMeans(n_clusters=2, random_state=42)), 'kmeans': KMeans(n_clusters=22, random_state=42)}",0.24908147362645414,0.8864306269564423,68.24129433196457,0.1809559877966614,680.23
sonar.csv,"{'stackingestimator-1': StackingEstimator(estimator=MiniBatchKMeans(batch_size=50, n_clusters=4,
                                            random_state=42)), 'stackingestimator-2': StackingEstimator(estimator=KMeans(n_clusters=21, random_state=42)), 'agglomerativeclustering': AgglomerativeClustering(n_clusters=22)}",0.09028099960980907,1.70193885713252,13.109990651395659,0.044265986473346675,1674.8
haberman.csv,"{'stackingestimator': StackingEstimator(estimator=KMeans(n_clusters=10, random_state=42)), 'kmeans': KMeans(n_clusters=22, random_state=42)}",0.2292375237552337,1.1708545676336823,111.4757539413877,0.008498838679529332,713.96
jain.csv,"{'spectralclustering': SpectralClustering(eigen_solver='lobpcg', n_clusters=22, random_state=42)}",0.1672880412100792,1.3340401073606956,173.4632261476978,0.14266649771351855,1816.81
tae.csv,"{'stackingestimator-1': StackingEstimator(estimator=MiniBatchKMeans(batch_size=25, n_clusters=11,
                                            random_state=42)), 'stackingestimator-2': StackingEstimator(estimator=KMeans(n_clusters=17, random_state=42)), 'agglomerativeclustering': AgglomerativeClustering(n_clusters=22)}",0.44646465888006265,0.718061146298488,115.33705744239485,0.03329765377931368,1198.61
thy.csv,"{'stackingestimator': StackingEstimator(estimator=KMeans(n_clusters=18, random_state=42)), 'agglomerativeclustering': AgglomerativeClustering(n_clusters=22)}",0.23487853741780126,0.9593401992975042,104.46444836420088,0.1278955107558857,565.19
sizes2.csv,"{'fastica': FastICA(n_components=2, random_state=42), 'agglomerativeclustering': AgglomerativeClustering()}",0.48478713651463307,0.9350194336124513,785.9095066957226,0.599752233545345,1804.95
3-spiral.csv,"{'spectralclustering': SpectralClustering(eigen_solver='arpack', n_clusters=22, random_state=42)}",0.051584528520380375,1.7244183425756872,69.45326714614549,0.11460160325380518,1800.89
compound.csv,{'agglomerativeclustering': AgglomerativeClustering()},0.4954113139990322,0.8083038963250924,419.1309644165833,0.4841271762316797,903.17
R15.csv,"{'stackingestimator': StackingEstimator(estimator=KMeans(n_clusters=2, random_state=42)), 'kmeans': KMeans(init='random', n_clusters=3, random_state=42)}",0.314413645180888,1.059349984219035,321.3026649862788,0.2308430783259615,1806.21
sizes4.csv,{'agglomerativeclustering': AgglomerativeClustering(n_clusters=21)},0.3080848294417682,0.8877720971216624,943.741627094833,0.10544905238641801,1800.15
segment.csv,"{'standardscaler': StandardScaler(), 'spectralclustering': SpectralClustering(eigen_solver='lobpcg', n_clusters=10, random_state=42)}",0.37609309292520876,0.5090774737042333,3.287744856919315,0.0,1814.04
ecoli.csv,"{'stackingestimator': StackingEstimator(estimator=KMeans(n_clusters=17, random_state=42)), 'kmeans': KMeans(n_clusters=22, random_state=42)}",0.16778048705001783,1.240415214605874,95.93970605898124,0.22429266698605688,655.76
iris.csv,"{'stackingestimator': StackingEstimator(estimator=MiniBatchKMeans(batch_size=10, n_clusters=3,
                                            random_state=42)), 'agglomerativeclustering': AgglomerativeClustering(n_clusters=22)}",0.2813552814137599,0.9267844573341143,191.6070065495061,0.1897526843804664,480.99
cluto-t8-8k.csv,"{'stackingestimator': StackingEstimator(estimator=KMeans(init='random', n_clusters=3,
                                   random_state=42)), 'dbscan': DBSCAN(eps=0.1, leaf_size=20, min_samples=10)}",0.426299248036253,0.797825321081228,7411.514700126007,0.43940228952255606,1876.16
arrhythmia.csv,"{'minmaxscaler': MinMaxScaler(), 'standardscaler': StandardScaler(), 'spectralclustering': SpectralClustering(eigen_solver='arpack', n_clusters=12, random_state=42)}",0.08507805457346808,1.044628495296881,2.8612124652677444,0.010766519880563817,1876.84
aggregation.csv,"{'spectralclustering': SpectralClustering(affinity='nearest_neighbors', eigen_solver='arpack',
                   n_clusters=2, random_state=42)}",0.29436349836590797,1.562774575292911,259.0731358648947,0.43364117894528453,1800.36
pathbased.csv,"{'stackingestimator': StackingEstimator(estimator=MiniBatchKMeans(batch_size=50, n_clusters=17,
                                            random_state=42)), 'agglomerativeclustering': AgglomerativeClustering(n_clusters=22)}",0.3681416004903098,0.7105123691009164,399.92008554502473,0.17863470936031234,526.87
